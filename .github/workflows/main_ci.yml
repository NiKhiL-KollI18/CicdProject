# .github/workflows/main_ci.yml
name: Full-Stack CI/CD - v2

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          # Check out repository into a specific folder to handle paths
          path: CIcdProject 

      # --- Login Step (Must be here for security) ---
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      # --- Build Backend ---
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        # Path to pom.xml relative to the checked-out folder
        run: mvn -f ./CIcdProject/BackEnd/pom.xml clean install -DskipTests

      - name: Build and push Backend image
        uses: docker/build-push-action@v4
        with:
          # Context and file paths relative to the checked-out folder
          context: ./CIcdProject/BackEnd 
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/filesharing-backend:latest
          file: ./CIcdProject/BackEnd/Dockerfile 

      # --- Build Frontend ---
      - name: Build and push Frontend image
        uses: docker/build-push-action@v4
        with:
          # Correct context for the frontend folder
          context: ./CIcdProject/FileSharingSystem_FrontEnd-main 
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/filesharing-frontend:latest
          file: ./CIcdProject/FileSharingSystem_FrontEnd-main/Dockerfile

  deploy: # <--- CRITICAL FIX: This job must align with 'build-and-push'
    runs-on: self-hosted
    needs: build-and-push
    steps:
      - name: Pull and run Docker Compose
        run: |
          # The entire repo is checked out into CIcdProject
          cd /path/to/your/deployment_root/CIcdProject
          docker-compose pull
          docker-compose down
          docker-compose up -d